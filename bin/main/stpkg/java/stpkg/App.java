/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stpkg;


import org.apache.commons.math3.linear.Array2DRowRealMatrix;
import org.apache.commons.math3.linear.RealMatrix;

/*
import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.core.config.Configurator;
*/

public class App {
   // private static final Logger logger = LogManager.getLogger();

    public static void main(String[] args) {

    //    Configurator.setLevel(logger.getName(), Level.TRACE);

        matrix first = new matrix();

        int N = 3;

        double[][] mat = new double[][]{
                new double[]{1d, 2d, 3d},
                new double[]{5d, 2d, 8d},
                new double[]{4d, 3d, 8d},
        };

        first.wahoovian(mat);

        System.out.println();

        int i;
        int j;

        double[][] B = new double[N][N];

        for (i = 0; i < N; i++) {
            for (j = 0; j < N; j++)
                B[j][i] = -1 * mat[j][i];
        }


        RealMatrix m2 = new Array2DRowRealMatrix(B);
        RealMatrix resultMatrix = m2.transpose();
        System.out.println("Negative Matrix Transpose: " + resultMatrix);


/*
        int B[][] = new int[N][N], i, j;

        transpose(mat , B);

        System.out.println();

        System.out.print("Result matrix is \n");
        for (i = 0; i < N; i++)
        {
            for (j = 0; j < N; j++)

                System.out.print(B[i][j] + " ");
            System.out.print("\n");
        }

            double[][] m2_data = new double[][]{
                    new double[]{1d, 2d, 3d },
                    new double[]{5d, 2d, 8d },
                    new double[]{4d, 3d, 8d },
            };

            RealMatrix m2 = new Array2DRowRealMatrix(m2_data);
            RealMatrix resultMatrix = m2.transpose();
            System.out.println("matrix product: " + resultMatrix) ;

*/


    }
}


